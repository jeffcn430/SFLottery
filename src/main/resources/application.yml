server:
  port: 8899
spring:
  thymeleaf:
    mode: LEGACYHTML5
    cache: false
  datasource:
    url: jdbc:mysql://localhost:3306/sf?useUnicode=true&characterEncoding=utf8&useSSL=true
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: qwe123
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    druid:
      initial-size: 1
      minIdle: 3
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 30000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      #useGlobalDataSourceStat: true
      stat-view-servlet:
        login-username: admin
        login-password: admin

#mybatis
#mybatis-plus:
mybatis-plus:
  mapper-locations: classpath:/static/mapping/*.xml
  typeAliasesPackage: com.sf.lottery.model #实体扫描，多个package用逗号或者分号分隔
  typeEnumsPackage: com.sf.lottery.enums
  configuration:
      map-underscore-to-camel-case: false
      cache-enabled: false
      log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #打印sql日志
  global-config:
    id-type: 0 #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    field-strategy: 2 #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    db-column-underline: true #驼峰下划线转换
    refresh-mapper: true #刷新mapper 调试神器
    capital-mode: false #数据库大写下划线转换
    logic-delete-value: 0 #逻辑删除配置
    logic-not-delete-value: 1
#逻辑删除配置
#    meta-object-handler: com.baomidou.springboot.xxx #自定义填充策略接口实现
#    sql-injector: com.baomidou.springboot.xxx #自定义SQL注入器
#    key-generator: com.baomidou.springboot.xxx #序列接口实现类配置


